'use client'
import Head from "next/head";
import Router, { useRouter } from "next/navigation";
import axios from "axios";
import { useEffect, useRef, useState } from "react";
import { toast, ToastContainer } from "react-toastify";
import 'react-toastify/dist/ReactToastify.css';
import AOS from 'aos';
import 'aos/dist/aos.css';
import ClientHeader from "../../components/ClientHeader/ClientHeader";
import { useTranslation } from 'next-i18next'
import { useMutation } from "@tanstack/react-query";
import { PulseLoader } from "react-spinners";

export default function LoginPage() {

  const [userEmail, setUserEmail] = useState('')
  const [userPass, setUserPass] = useState('')
  const [isLoading, setIsLoading] = useState(false)

  useEffect(() => {
    AOS.init()
  }, [])

  const { t } = useTranslation('common')
  const router = useRouter()

  const { mutate: signinUser } = useMutation({
    mutationFn: async () => await axios.post('/api/auth/signin', {
      "email": userEmail,
      "password": userPass
    }),
    onSuccess: (data) => {
      if (data) {
        setIsLoading(true)
        setTimeout(() => {
          toast.success('Signin successfully!', { autoClose: 2000 })
        })
        localStorage.setItem('refresh_token', data?.data.user.refresh_token)
        localStorage.setItem('access_token', data?.data.user.access_token)
        setTimeout(() => {
          router.push('/')
        }, 2000)
      } else {
        setTimeout(() => {
          toast.error('Please, Enter Correct Email and Password!')
        })
      }

    },
    onError: () => {
      setTimeout(() => {
        toast.error('Please, Enter Correct Email and Password!')
      })
    }
  })

  const handleEmail = (e) => {
    setUserEmail(e.target.value)
  }

  const handlePass = (e) => {
    setUserPass(e.target.value)
  }

  const signClient = () => {
    signinUser()
  }

  return (
    <>
      <Head>
        <title>Foody | Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="sm:mr-32px sm:ml-32px" style={{ "zoom": "0.66" }}>
        <ClientHeader />
        <div className="md:flex-row flex-col mx-3 my-3 flex sm:mx-0 ">
          <div className="lg:w-3/6 md:w-[50%] w-full bg-clientRed lg:h-fit h-[160px] rounded-4 sm:mr-10" data-aos='fade-right'>
            <img
              alt=""
              src="/loginImages/login.svg"
              className="lg:w-5/6 lg:h-[740px] w-[240px] h-[150px] lg:ml-32px sm:mt-5 sm:ml-68px lg::mr-24 sm:mb-40 mx-auto"
            />
          </div>
          <div className="lg:w-2/6 md:w-[50%] w-full mx-auto" >
            <div className="flex lg:ml-20 flex-row sm:gap-x-16 sm:ml-174px sm:mb-18 sm:mt-105px mt-11 gap-x-9 mb-15 justify-center">
              <p className="text-clientRed sm:text-3xl text-xl font-medium ">
                {t('Login')}
              </p>
              <p onClick={() => router.push('/register')} className="cursor-pointer text-clientGray sm:text-3xl text-xl font-normal sm:mr-48">
                {t('Register')}
              </p>
            </div>
            <div className="">
              <div className="mb-26px">
                <p className=" font-body text-lg sm:mb-10px  text-grayInput sm:text-xl mb-4 font-medium">
                  {t('E-mail')}
                </p>
                <input
                  onChange={(e) => handleEmail(e)}
                  placeholder="E-mail"
                  className="pl-3 sm:h-68px bg-clientInput w-full h-14 text-lg font-medium"
                />
              </div>
              <div className="mb-26px">
                <p className=" font-body sm:mb-10px text-lg text-grayInput sm:text-xl mb-4 font-medium">
                  {t('Password')}
                </p>
                <input
                  onChange={(e) => handlePass(e)}
                  type="password"
                  placeholder="Password"
                  className="pl-3 sm:mb-72px sm:h-68px bg-clientInput w-full h-14 text-lg font-medium"
                />
              </div>
            </div>
            <button onClick={() => signClient()} className="w-full text-22 text-white sm:h-68px bg-clientRed font-medium h-14">
              {isLoading ? <div className='flex justify-center items-center mx-0 my-auto'>
                <PulseLoader
                  color="#fff"
                  loading={true}
                  size={10}
                  aria-label="Loading Spinner"
                  data-testid="loader"
                />
              </div> : t('Login')}
            </button>
          </div>
        </div>
      </main>
      <ToastContainer
        position="top-right"
        autoClose={4000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="light" />
    </>
  );
}
